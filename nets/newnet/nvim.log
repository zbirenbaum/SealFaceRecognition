
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg//nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/etc/xdg//nvim/sysinit.vim"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 2: sourcing "/usr/share/nvim/archlinux.vim"
finished sourcing /usr/share/nvim/archlinux.vim
continuing in /etc/xdg/nvim/sysinit.vim
finished sourcing /etc/xdg//nvim/sysinit.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/home/zach/.config/nvim/init.lua"
finished sourcing /home/zach/.config/nvim/init.lua
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/nvim/runtime/filetype.vim"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/vim/vimfiles/ftdetect)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 2324: sourcing "/usr/share/vim/vimfiles/ftdetect/meson.vim"
finished sourcing /usr/share/vim/vimfiles/ftdetect/meson.vim
continuing in /usr/share/nvim/runtime/filetype.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/start/vim-fugitive/ftdetect)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 2324: sourcing "/home/zach/.local/share/nvim/site/pack/packer/start/vim-fugitive/ftdetect/fugitive.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/start/vim-fugitive/ftdetect/fugitive.vim
continuing in /usr/share/nvim/runtime/filetype.vim
not found in 'packpath': "start/*/ftdetect/*.vim"
not found in 'runtimepath': "ftdetect/*.lua"
not found in 'packpath': "pack/*/start/*/ftdetect/*.lua"
not found in 'packpath': "start/*/ftdetect/*.lua"
finished sourcing /usr/share/nvim/runtime/filetype.vim
not found in 'packpath': "pack/*/start/*/filetype.vim"
not found in 'packpath': "start/*/filetype.vim"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/nvim/runtime/ftplugin.vim"
finished sourcing /usr/share/nvim/runtime/ftplugin.vim
not found in 'packpath': "pack/*/start/*/ftplugin.vim"
not found in 'packpath': "start/*/ftplugin.vim"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/nvim/runtime/indent.vim"
finished sourcing /usr/share/nvim/runtime/indent.vim
not found in 'packpath': "pack/*/start/*/indent.vim"
not found in 'packpath': "start/*/indent.vim"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime/syntax)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/nvim/runtime/syntax/syntax.vim"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime/syntax)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 19: sourcing "/usr/share/nvim/runtime/syntax/synload.vim"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime/syntax)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 21: sourcing "/usr/share/nvim/runtime/syntax/syncolor.vim"
finished sourcing /usr/share/nvim/runtime/syntax/syncolor.vim
continuing in /usr/share/nvim/runtime/syntax/synload.vim
not found in 'packpath': "pack/*/start/*/syntax/syncolor.vim"
not found in 'packpath': "start/*/syntax/syncolor.vim"
finished sourcing /usr/share/nvim/runtime/syntax/synload.vim
continuing in /usr/share/nvim/runtime/syntax/syntax.vim
Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

finished sourcing /usr/share/nvim/runtime/syntax/syntax.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
not found in 'packpath': "start/*"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/nvim/runtime/plugin/gzip.vim"
finished sourcing /usr/share/nvim/runtime/plugin/gzip.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/nvim/runtime/plugin/health.vim"
finished sourcing /usr/share/nvim/runtime/plugin/health.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/nvim/runtime/plugin/man.vim"
finished sourcing /usr/share/nvim/runtime/plugin/man.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/nvim/runtime/plugin/matchit.vim"
finished sourcing /usr/share/nvim/runtime/plugin/matchit.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/nvim/runtime/plugin/matchparen.vim"
finished sourcing /usr/share/nvim/runtime/plugin/matchparen.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/nvim/runtime/plugin/netrwPlugin.vim"
finished sourcing /usr/share/nvim/runtime/plugin/netrwPlugin.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/nvim/runtime/plugin/rplugin.vim"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 3: sourcing "/home/zach/.local/share/nvim/rplugin.vim"
finished sourcing /home/zach/.local/share/nvim/rplugin.vim
continuing in function <SNR>18_LoadRemotePlugins
finished sourcing /usr/share/nvim/runtime/plugin/rplugin.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/nvim/runtime/plugin/shada.vim"
finished sourcing /usr/share/nvim/runtime/plugin/shada.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/nvim/runtime/plugin/spellfile.vim"
finished sourcing /usr/share/nvim/runtime/plugin/spellfile.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/nvim/runtime/plugin/tarPlugin.vim"
finished sourcing /usr/share/nvim/runtime/plugin/tarPlugin.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/nvim/runtime/plugin/tohtml.vim"
finished sourcing /usr/share/nvim/runtime/plugin/tohtml.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/nvim/runtime/plugin/tutor.vim"
finished sourcing /usr/share/nvim/runtime/plugin/tutor.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/nvim/runtime/plugin/zipPlugin.vim"
finished sourcing /usr/share/nvim/runtime/plugin/zipPlugin.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/vim/vimfiles/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/vim/vimfiles/plugin/fzf.vim"
finished sourcing /usr/share/vim/vimfiles/plugin/fzf.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/home/zach/.config/nvim/plugin/packer_compiled.lua"
not found in 'packpath': "pack/*/start/packer.nvim"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
not found in 'runtimepath': "lua/which-key.lua"
not found in 'packpath': "pack/*/start/*/lua/which-key.lua"
not found in 'packpath': "start/*/lua/which-key.lua"
finished sourcing /home/zach/.config/nvim/plugin/packer_compiled.lua
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/start)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/start)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/start/vim-fugitive/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/home/zach/.local/share/nvim/site/pack/packer/start/vim-fugitive/plugin/fugitive.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/start/vim-fugitive/plugin/fugitive.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/start/vim-fugitive/ftdetect)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/home/zach/.local/share/nvim/site/pack/packer/start/vim-fugitive/ftdetect/fugitive.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/start/vim-fugitive/ftdetect/fugitive.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/start)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/start/which-key.nvim/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/home/zach/.local/share/nvim/site/pack/packer/start/which-key.nvim/plugin/which-key.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/start/which-key.nvim/plugin/which-key.vim
not found in 'packpath': "start/*"
not found in 'runtimepath': "plugin/**/*.vim"
not found in 'packpath': "pack/*/start/*/plugin/**/*.vim"
not found in 'packpath': "start/*/plugin/**/*.vim"
not found in 'runtimepath': "plugin/**/*.lua"
not found in 'packpath': "pack/*/start/*/plugin/**/*.lua"
not found in 'packpath': "start/*/plugin/**/*.lua"
Reading ShaDa file "/home/zach/.local/share/nvim/shada/main.shada" info marks oldfiles
Executing BufWinEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing BufEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing BufEnter Autocommands for "*"
autocommand lua require("packer.load")({'termwrapper.nvim'}, { event = "BufEnter *" }, _G.packer_plugins)

chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/termwrapper.nvim/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/termwrapper.nvim/plugin/termwrapper.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/termwrapper.nvim/plugin/termwrapper.vim
continuing in BufEnter Autocommands for "*"
Executing BufEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing BufEnter Autocommands for "*"
Executing VimEnter Autocommands for "*"
autocommand lua require("which-key").load()

not found in 'runtimepath': "lua/which-key/plugins.lua"
not found in 'packpath': "pack/*/start/*/lua/which-key/plugins.lua"
not found in 'packpath': "start/*/lua/which-key/plugins.lua"
not found in 'runtimepath': "lua/which-key/plugins/presets.lua"
not found in 'packpath': "pack/*/start/*/lua/which-key/plugins/presets.lua"
not found in 'packpath': "start/*/lua/which-key/plugins/presets.lua"
Executing VimEnter Autocommands for "*"
autocommand lua require("packer.load")({'packer.nvim'}, { event = "VimEnter *" }, _G.packer_plugins)

chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-web-devicons/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-web-devicons/plugin/nvim-web-devicons.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-web-devicons/plugin/nvim-web-devicons.vim
continuing in VimEnter Autocommands for "*"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/galaxyline.nvim/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/galaxyline.nvim/plugin/galaxyline.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/galaxyline.nvim/plugin/galaxyline.vim
continuing in VimEnter Autocommands for "*"
Executing VimEnter Autocommands for "*"
Executing VimEnter Autocommands for "*"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime/autoload/provider)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
sourcing "/usr/share/nvim/runtime/autoload/provider/clipboard.vim"
Executing command: "'/bin/zsh' '-c' 'xsel -o -b'"


finished sourcing /usr/share/nvim/runtime/autoload/provider/clipboard.vim
Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand lua require("packer.load")({'vim-matchup'}, { event = "CursorMoved *" }, _G.packer_plugins)

chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/plugin/matchup.vim"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 34: sourcing "/usr/share/nvim/runtime/plugin/matchparen.vim"
finished sourcing /usr/share/nvim/runtime/plugin/matchparen.vim
continuing in /home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/plugin/matchup.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 54: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup.vim
continuing in /home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/plugin/matchup.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 1: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup/perf.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup/perf.vim
continuing in function matchup#init
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 6: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup/loader.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup/loader.vim
continuing in function matchup#init[4]..<SNR>35_init_modules
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 6: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup/matchparen.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup/matchparen.vim
continuing in function matchup#init[4]..<SNR>35_init_modules
not found in 'runtimepath': "lua/nvim-treesitter.lua"
not found in 'packpath': "pack/*/start/*/lua/nvim-treesitter.lua"
not found in 'packpath': "start/*/lua/nvim-treesitter.lua"
not found in 'runtimepath': "lua/nvim-treesitter/init.lua"
not found in 'packpath': "pack/*/start/*/lua/nvim-treesitter/init.lua"
not found in 'packpath': "start/*/lua/nvim-treesitter/init.lua"
not found in 'runtimepath': "lua/nvim-treesitter.so"
not found in 'packpath': "pack/*/start/*/lua/nvim-treesitter.so"
not found in 'packpath': "start/*/lua/nvim-treesitter.so"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/plugin/matchup.vim
continuing in CursorMoved Autocommands for "*"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/after/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/after/plugin/matchit.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/after/plugin/matchit.vim
continuing in CursorMoved Autocommands for "*"
Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif

chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/usr/share/nvim/runtime/scripts.vim"
finished sourcing /usr/share/nvim/runtime/scripts.vim
continuing in BufReadPost Autocommands for "*"
not found in 'packpath': "pack/*/start/*/scripts.vim"
not found in 'packpath': "start/*/scripts.vim"
Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf FALLBACK conf | endif

Executing BufReadPost Autocommands for "*"
autocommand lua require("packer.load")({'nvim-colorizer.lua', 'nvim-treesitter', 'plenary.nvim', 'indent-blankline.nvim', 'lightspeed.nvim', 'nvim-lspinstall', 'lspkind-nvim'}, { event = "BufRead *" }, _G.packer_plugins)

chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-colorizer.lua/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-colorizer.lua/plugin/colorizer.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-colorizer.lua/plugin/colorizer.vim
continuing in BufReadPost Autocommands for "*"
not found in 'runtimepath': "lua/ffi.lua"
not found in 'packpath': "pack/*/start/*/lua/ffi.lua"
not found in 'packpath': "start/*/lua/ffi.lua"
not found in 'runtimepath': "lua/ffi/init.lua"
not found in 'packpath': "pack/*/start/*/lua/ffi/init.lua"
not found in 'packpath': "start/*/lua/ffi/init.lua"
not found in 'runtimepath': "lua/ffi.so"
not found in 'packpath': "pack/*/start/*/lua/ffi.so"
not found in 'packpath': "start/*/lua/ffi.so"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/plugin/nvim-treesitter.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/plugin/nvim-treesitter.vim
continuing in BufReadPost Autocommands for "*"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/ftdetect)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/ftdetect/gdresource.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/ftdetect/gdresource.vim
continuing in BufReadPost Autocommands for "*"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/ftdetect)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/ftdetect/gdscript.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/ftdetect/gdscript.vim
continuing in BufReadPost Autocommands for "*"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/ftdetect)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/ftdetect/gomod.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/ftdetect/gomod.vim
continuing in BufReadPost Autocommands for "*"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/ftdetect)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/ftdetect/hcl.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/ftdetect/hcl.vim
continuing in BufReadPost Autocommands for "*"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/ftdetect)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/ftdetect/query.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/ftdetect/query.vim
continuing in BufReadPost Autocommands for "*"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/ftdetect)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/ftdetect/yang.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-treesitter/ftdetect/yang.vim
continuing in BufReadPost Autocommands for "*"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/plenary.nvim/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/plenary.nvim/plugin/plenary.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/plenary.nvim/plugin/plenary.vim
continuing in BufReadPost Autocommands for "*"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
not found in 'runtimepath': "lua/plenary/async.lua"
not found in 'packpath': "pack/*/start/*/lua/plenary/async.lua"
not found in 'packpath': "start/*/lua/plenary/async.lua"
not found in 'runtimepath': "lua/plenary/vararg.lua"
not found in 'packpath': "pack/*/start/*/lua/plenary/vararg.lua"
not found in 'packpath': "start/*/lua/plenary/vararg.lua"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/indent-blankline.nvim/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/indent-blankline.nvim/plugin/indent_blankline.vim"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/indent-blankline.nvim/autoload/indent_blankline)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 11: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/indent-blankline.nvim/autoload/indent_blankline/helper.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/indent-blankline.nvim/autoload/indent_blankline/helper.vim
continuing in /home/zach/.local/share/nvim/site/pack/packer/opt/indent-blankline.nvim/plugin/indent_blankline.vim
not found in 'runtimepath': "lua/indent_blankline.lua"
not found in 'packpath': "pack/*/start/*/lua/indent_blankline.lua"
not found in 'packpath': "start/*/lua/indent_blankline.lua"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/indent-blankline.nvim/plugin/indent_blankline.vim
continuing in BufReadPost Autocommands for "*"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/lightspeed.nvim/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/lightspeed.nvim/plugin/lightspeed.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/lightspeed.nvim/plugin/lightspeed.vim
continuing in BufReadPost Autocommands for "*"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-lspinstall/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-lspinstall/plugin/lspinstall.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-lspinstall/plugin/lspinstall.vim
continuing in BufReadPost Autocommands for "*"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-lspconfig/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-lspconfig/plugin/lspconfig.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-lspconfig/plugin/lspconfig.vim
continuing in BufReadPost Autocommands for "*"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
not found in 'runtimepath': "lua/lspkind.lua"
not found in 'packpath': "pack/*/start/*/lua/lspkind.lua"
not found in 'packpath': "start/*/lua/lspkind.lua"
Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif

chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/usr/share/nvim/runtime/scripts.vim"
finished sourcing /usr/share/nvim/runtime/scripts.vim
continuing in BufReadPost Autocommands for "*"
not found in 'packpath': "pack/*/start/*/scripts.vim"
not found in 'packpath': "start/*/scripts.vim"
Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf FALLBACK conf | endif

Executing BufReadPost Autocommands for "*"
Executing BufReadPost Autocommands for "*"
autocommand call FugitiveDetect(expand('<amatch>:p'))

Executing BufReadPost Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing BufReadPost Autocommands for "*"
autocommand call s:matchparen.transmute_reset()

Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif

chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/usr/share/nvim/runtime)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/usr/share/nvim/runtime/scripts.vim"
finished sourcing /usr/share/nvim/runtime/scripts.vim
continuing in BufReadPost Autocommands for "*"
not found in 'packpath': "pack/*/start/*/scripts.vim"
not found in 'packpath': "start/*/scripts.vim"
Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf FALLBACK conf | endif

Executing BufReadPost Autocommands for "*"
Executing BufReadPost Autocommands for "*"
autocommand call FugitiveDetect(expand('<amatch>:p'))

Executing BufReadPost Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing BufReadPost Autocommands for "*"
autocommand call s:matchparen.transmute_reset()

Executing BufReadPost Autocommands for "*"
autocommand call FugitiveDetect(expand('<amatch>:p'))

Executing BufReadPost Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing BufReadPost Autocommands for "*"
autocommand call s:matchparen.transmute_reset()

Executing CursorMoved Autocommands for "*"
Executing CursorMoved Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 25: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup/pos.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup/pos.vim
continuing in function 6[3]..7
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 67: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup/delim.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup/delim.vim
continuing in function 6[3]..7
Executing CursorMoved Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing WinScrolled Autocommands for "*"
autocommand lua require("packer.load")({'neoscroll.nvim'}, { event = "WinScrolled *" }, _G.packer_plugins)

chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
not found in 'runtimepath': "lua/neoscroll.lua"
not found in 'packpath': "pack/*/start/*/lua/neoscroll.lua"
not found in 'packpath': "start/*/lua/neoscroll.lua"
Executing WinScrolled Autocommands for "*"
Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/indent-blankline.nvim/autoload)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/indent-blankline.nvim/autoload/indent_blankline.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/indent-blankline.nvim/autoload/indent_blankline.vim
continuing in nvim_exec() called at function <SNR>50_try:2
Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh


--- Terminal info --- {{{
&term: xterm-kitty
Description: KovIdTTY
Aliases: xterm-kitty
Boolean capabilities:
  auto_left_margin          bw         = false
  auto_right_margin         am         = true
  no_esc_ctlc               xsb        = false
  ceol_standout_glitch      xhp        = false
  eat_newline_glitch        xenl       = true
  erase_overstrike          eo         = false
  generic_type              gn         = false
  hard_copy                 hc         = false
  has_meta_key              km         = true
  has_status_line           hs         = true
  insert_null_glitch        in         = false
  memory_above              da         = false
  memory_below              db         = false
  move_insert_mode          mir        = true
  move_standout_mode        msgr       = true
  over_strike               os         = false
  status_line_esc_ok        eslok      = false
  dest_tabs_magic_smso      xt         = false
  tilde_glitch              hz         = false
  transparent_underline     ul         = false
  xon_xoff                  xon        = false
  needs_xon_xoff            nxon       = false
  prtr_silent               mc5i       = true
  hard_cursor               chts       = false
  non_rev_rmcup             nrrmc      = false
  no_pad_char               npc        = true
  non_dest_scroll_region    ndscr      = false
  can_change                ccc        = true
  back_color_erase          bce        = false
  hue_lightness_saturation  hls        = false
  col_addr_glitch           xhpa       = false
  cr_cancels_micro_mode     crxm       = false
  has_print_wheel           daisy      = false
  row_addr_glitch           xvpa       = false
  semi_auto_right_margin    sam        = false
  cpi_changes_res           cpix       = false
  lpi_changes_res           lpix       = false
  backspaces_with_bs        OTbs       = false
  crt_no_scrolling          OTns       = false
  no_correctly_working_cr   OTnc       = false
  gnu_has_meta_key          OTMT       = false
  linefeed_is_newline       OTNL       = false
  has_hardware_tabs         OTpt       = false
  return_does_clr_eol       OTxr       = false
Numeric capabilities:
  columns                   cols       = 80
  init_tabs                 it         = 8
  lines                     lines      = 24
  lines_of_memory           lm         = -1
  magic_cookie_glitch       xmc        = -1
  padding_baud_rate         pb         = -1
  virtual_terminal          vt         = -1
  width_status_line         wsl        = -1
  num_labels                nlab       = -1
  label_height              lh         = -1
  label_width               lw         = -1
  max_attributes            ma         = -1
  maximum_windows           wnum       = -1
  max_colors                colors     = 256
  max_pairs                 pairs      = 32767
  no_color_video            ncv        = -1
  buffer_capacity           bufsz      = -1
  dot_vert_spacing          spinv      = -1
  dot_horz_spacing          spinh      = -1
  max_micro_address         maddr      = -1
  max_micro_jump            mjump      = -1
  micro_col_size            mcs        = -1
  micro_line_size           mls        = -1
  number_of_pins            npins      = -1
  output_res_char           orc        = -1
  output_res_line           orl        = -1
  output_res_horz_inch      orhi       = -1
  output_res_vert_inch      orvi       = -1
  print_rate                cps        = -1
  wide_char_size            widcs      = -1
  buttons                   btns       = -1
  bit_image_entwining       bitwin     = -1
  bit_image_type            bitype     = -1
  magic_cookie_glitch_ul    OTug       = -1
  carriage_return_delay     OTdC       = -1
  new_line_delay            OTdN       = -1
  backspace_delay           OTdB       = -1
  horizontal_tab_delay      OTdT       = -1
  number_of_function_keys   OTkn       = -1
String capabilities:
  back_tab                  cbt        = <Esc>[Z
  bell                      bel        = <C-G>
  carriage_return           cr         = <CR>
  change_scroll_region      csr        = <Esc>[%i%p1%d;%p2%dr
  clear_all_tabs            tbc        = <Esc>[3g
  clear_screen              clear      = <Esc>[H<Esc>[2J
  clr_eol                   el         = <Esc>[K
  clr_eos                   ed         = <Esc>[J
  column_address            hpa        = <Esc>[%i%p1%dG
  cursor_address            cup        = <Esc>[%i%p1%d;%p2%dH
  cursor_down               cud1       = <NL>
  cursor_home               home       = <Esc>[H
  cursor_invisible          civis      = <Esc>[?25l
  cursor_left               cub1       = <C-H>
  cursor_normal             cnorm      = <Esc>[?25h
  cursor_right              cuf1       = <Esc>[C
  cursor_up                 cuu1       = <Esc>[A
  cursor_visible            cvvis      = <Esc>[?12;25h
  delete_character          dch1       = <Esc>[P
  delete_line               dl1        = <Esc>[M
  dis_status_line           dsl        = <Esc>]2;<C-G>
  enter_alt_charset_mode    smacs      = <Esc>(0
  enter_bold_mode           bold       = <Esc>[1m
  enter_ca_mode             smcup      = <Esc>[?1049h
  enter_dim_mode            dim        = <Esc>[2m
  enter_insert_mode         smir       = <Esc>[4h
  enter_reverse_mode        rev        = <Esc>[7m
  enter_standout_mode       smso       = <Esc>[7m
  enter_underline_mode      smul       = <Esc>[4m
  erase_chars               ech        = <Esc>[%p1%dX
  exit_alt_charset_mode     rmacs      = <Esc>(B
  exit_attribute_mode       sgr0       = <Esc>(B<Esc>[m
  exit_ca_mode              rmcup      = <Esc>[?1049l
  exit_insert_mode          rmir       = <Esc>[4l
  exit_standout_mode        rmso       = <Esc>[27m
  exit_underline_mode       rmul       = <Esc>[24m
  flash_screen              flash      = <Esc>[?5h$<100/><Esc>[?5l
  from_status_line          fsl        = <C-G>
  insert_line               il1        = <Esc>[L
  key_backspace             kbs        = <^?>
  key_dc                    kdch1      = <Esc>[3~
  key_down                  kcud1      = <Esc>OB
  key_f1                    kf1        = <Esc>OP
  key_f10                   kf10       = <Esc>[21~
  key_f2                    kf2        = <Esc>OQ
  key_f3                    kf3        = <Esc>OR
  key_f4                    kf4        = <Esc>OS
  key_f5                    kf5        = <Esc>[15~
  key_f6                    kf6        = <Esc>[17~
  key_f7                    kf7        = <Esc>[18~
  key_f8                    kf8        = <Esc>[19~
  key_f9                    kf9        = <Esc>[20~
  key_home                  khome      = <Esc>OH
  key_ic                    kich1      = <Esc>[2~
  key_left                  kcub1      = <Esc>OD
  key_npage                 knp        = <Esc>[6~
  key_ppage                 kpp        = <Esc>[5~
  key_right                 kcuf1      = <Esc>OC
  key_sf                    kind       = <Esc>[1;2B
  key_sr                    kri        = <Esc>[1;2A
  key_up                    kcuu1      = <Esc>OA
  keypad_local              rmkx       = <Esc>[?1l
  keypad_xmit               smkx       = <Esc>[?1h
  parm_dch                  dch        = <Esc>[%p1%dP
  parm_delete_line          dl         = <Esc>[%p1%dM
  parm_down_cursor          cud        = <Esc>[%p1%dB
  parm_ich                  ich        = <Esc>[%p1%d@
  parm_index                indn       = <Esc>[%p1%dS
  parm_insert_line          il         = <Esc>[%p1%dL
  parm_left_cursor          cub        = <Esc>[%p1%dD
  parm_right_cursor         cuf        = <Esc>[%p1%dC
  parm_rindex               rin        = <Esc>[%p1%dT
  parm_up_cursor            cuu        = <Esc>[%p1%dA
  repeat_char               rep        = %p1%c<Esc>[%p2%{1}%-%db
  reset_1string             rs1        = <Esc>]<Esc>\<Esc>c
  restore_cursor            rc         = <Esc>8
  row_address               vpa        = <Esc>[%i%p1%dd
  save_cursor               sc         = <Esc>7
  scroll_forward            ind        = <NL>
  scroll_reverse            ri         = <Esc>M
  set_attributes            sgr        = %?%p9%t<Esc>(0%e<Esc>(B%;<Esc>[0%?%p6%t;1%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;%?%p7%t;8%;m
  set_tab                   hts        = <Esc>H
  tab                       ht         = <Tab>
  to_status_line            tsl        = <Esc>]2;
  key_a1                    ka1        = 
  key_a3                    ka3        = 
  key_c1                    kc1        = 
  key_c3                    kc3        = 
  acs_chars                 acsc       = ++,,--..00``aaffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~
  key_btab                  kcbt       = <Esc>[Z
  enter_am_mode             smam       = <Esc>[?7h
  exit_am_mode              rmam       = <Esc>[?7l
  key_end                   kend       = <Esc>OF
  key_help                  khlp       = 
  key_undo                  kund       = 
  key_sdc                   kDC        = <Esc>[3;2~
  key_send                  kEND       = <Esc>[1;2F
  key_shome                 kHOM       = <Esc>[1;2H
  key_sic                   kIC        = <Esc>[2;2~
  key_sleft                 kLFT       = <Esc>[1;2D
  key_snext                 kNXT       = <Esc>[6;2~
  key_sprevious             kPRV       = <Esc>[5;2~
  key_sright                kRIT       = <Esc>[1;2C
  key_f11                   kf11       = <Esc>[23~
  key_f12                   kf12       = <Esc>[24~
  key_f13                   kf13       = <Esc>[1;2P
  key_f14                   kf14       = <Esc>[1;2Q
  key_f15                   kf15       = <Esc>[1;2R
  key_f16                   kf16       = <Esc>[1;2S
  key_f17                   kf17       = <Esc>[15;2~
  key_f18                   kf18       = <Esc>[17;2~
  key_f19                   kf19       = <Esc>[18;2~
  key_f20                   kf20       = <Esc>[19;2~
  key_f21                   kf21       = <Esc>[20;2~
  key_f22                   kf22       = <Esc>[21;2~
  key_f23                   kf23       = <Esc>[23;2~
  key_f24                   kf24       = <Esc>[24;2~
  key_f25                   kf25       = <Esc>[1;5P
  key_f26                   kf26       = <Esc>[1;5Q
  key_f27                   kf27       = <Esc>[1;5R
  key_f28                   kf28       = <Esc>[1;5S
  key_f29                   kf29       = <Esc>[15;5~
  key_f30                   kf30       = <Esc>[17;5~
  key_f31                   kf31       = <Esc>[18;5~
  key_f32                   kf32       = <Esc>[19;5~
  key_f33                   kf33       = <Esc>[20;5~
  key_f34                   kf34       = <Esc>[21;5~
  key_f35                   kf35       = <Esc>[23;5~
  key_f36                   kf36       = <Esc>[24;5~
  key_f37                   kf37       = <Esc>[1;6P
  key_f38                   kf38       = <Esc>[1;6Q
  key_f39                   kf39       = <Esc>[1;6R
  key_f40                   kf40       = <Esc>[1;6S
  key_f41                   kf41       = <Esc>[15;6~
  key_f42                   kf42       = <Esc>[17;6~
  key_f43                   kf43       = <Esc>[18;6~
  key_f44                   kf44       = <Esc>[19;6~
  key_f45                   kf45       = <Esc>[20;6~
  key_f46                   kf46       = <Esc>[21;6~
  key_f47                   kf47       = <Esc>[23;6~
  key_f48                   kf48       = <Esc>[24;6~
  key_f49                   kf49       = <Esc>[1;3P
  key_f50                   kf50       = <Esc>[1;3Q
  key_f51                   kf51       = <Esc>[1;3R
  key_f52                   kf52       = <Esc>[1;3S
  key_f53                   kf53       = <Esc>[15;3~
  key_f54                   kf54       = <Esc>[17;3~
  key_f55                   kf55       = <Esc>[18;3~
  key_f56                   kf56       = <Esc>[19;3~
  key_f57                   kf57       = <Esc>[20;3~
  key_f58                   kf58       = <Esc>[21;3~
  key_f59                   kf59       = <Esc>[23;3~
  key_f60                   kf60       = <Esc>[24;3~
  key_f61                   kf61       = <Esc>[1;4P
  key_f62                   kf62       = <Esc>[1;4Q
  key_f63                   kf63       = <Esc>[1;4R
  clr_bol                   el1        = <Esc>[1K
  user6                     u6         = <Esc>[%i%d;%dR
  user7                     u7         = <Esc>[6n
  user8                     u8         = <Esc>[?%[;0123456789]c
  user9                     u9         = <Esc>[c
  orig_pair                 op         = <Esc>[39;49m
  orig_colors               oc         = <Esc>]104<C-G>
  initialize_color          initc      = <Esc>]4;%p1%d;rgb:%p2%{255}%*%{1000}%/%2.2X/%p3%{255}%*%{1000}%/%2.2X/%p4%{255}%*%{1000}%/%2.2X<Esc>\
  enter_italics_mode        sitm       = <Esc>[3m
  exit_italics_mode         ritm       = <Esc>[23m
  key_mouse                 kmous      = <Esc>[M
  set_a_foreground          setaf      = <Esc>[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;m
  set_a_background          setab      = <Esc>[%?%p1%{8}%<%t4%p1%d%e%p1%{16}%<%t10%p1%{8}%-%d%e48;5;%p1%d%;m
  set_tb_margin             smgtb      = <Esc>[%i%p1%d;%p2%dr
Extended boolean capabilities:
  Su                        = true
  Tc                        = true
  fullkbd                   = true
Extended string capabilities:
  Smulx                     = <Esc>[4:%p1%dm
  Sync                      = <Esc>P=%p1%ds<Esc>\
  kDC3                      = <Esc>[3;3~
  kDC4                      = <Esc>[3;4~
  kDC5                      = <Esc>[3;5~
  kDC6                      = <Esc>[3;6~
  kDC7                      = <Esc>[3;7~
  kDN                       = <Esc>[1;2B
  kDN3                      = <Esc>[1;3B
  kDN4                      = <Esc>[1;4B
  kDN5                      = <Esc>[1;5B
  kDN6                      = <Esc>[1;6B
  kDN7                      = <Esc>[1;7B
  kEND3                     = <Esc>[1;3F
  kEND4                     = <Esc>[1;4F
  kEND5                     = <Esc>[1;5F
  kEND6                     = <Esc>[1;6F
  kEND7                     = <Esc>[1;7F
  kHOM3                     = <Esc>[1;3H
  kHOM4                     = <Esc>[1;4H
  kHOM5                     = <Esc>[1;5H
  kHOM6                     = <Esc>[1;6H
  kHOM7                     = <Esc>[1;7H
  kIC3                      = <Esc>[2;3~
  kIC4                      = <Esc>[2;4~
  kIC5                      = <Esc>[2;5~
  kIC6                      = <Esc>[2;6~
  kIC7                      = <Esc>[2;7~
  kLFT3                     = <Esc>[1;3D
  kLFT4                     = <Esc>[1;4D
  kLFT5                     = <Esc>[1;5D
  kLFT6                     = <Esc>[1;6D
  kLFT7                     = <Esc>[1;7D
  kNXT3                     = <Esc>[6;3~
  kNXT4                     = <Esc>[6;4~
  kNXT5                     = <Esc>[6;5~
  kNXT6                     = <Esc>[6;6~
  kNXT7                     = <Esc>[6;7~
  kPRV3                     = <Esc>[5;3~
  kPRV4                     = <Esc>[5;4~
  kPRV5                     = <Esc>[5;5~
  kPRV6                     = <Esc>[5;6~
  kPRV7                     = <Esc>[5;7~
  kRIT3                     = <Esc>[1;3C
  kRIT4                     = <Esc>[1;4C
  kRIT5                     = <Esc>[1;5C
  kRIT6                     = <Esc>[1;6C
  kRIT7                     = <Esc>[1;7C
  kUP                       = <Esc>[1;2A
  kUP3                      = <Esc>[1;3A
  kUP4                      = <Esc>[1;4A
  kUP5                      = <Esc>[1;5A
  kUP6                      = <Esc>[1;6A
  kUP7                      = <Esc>[1;7A
  rmxx                      = <Esc>[29m
  setrgbb                   = <Esc>[48:2:%p1%d:%p2%d:%p3%dm
  setrgbf                   = <Esc>[38:2:%p1%d:%p2%d:%p3%dm
  smxx                      = <Esc>[9m
  ext.get_bg                = <Esc>]11;?<C-G>
  Ss                        = <Esc>[%p1%d q
  Se                        = <Esc>[ q
  ext.resize_screen         = <Esc>[8;%p1%d;%p2%dt
  ext.reset_scroll_region   = <Esc>[r
  ext.set_cursor_color      = <Esc>]12;#%p1%06x<C-G>
  ext.reset_cursor_color    = <Esc>]112<C-G>
  ext.save_title            = <Esc>[22;0t
  ext.restore_title         = <Esc>[23;0t
  ext.enable_lr_margin      = <Esc>[?69h
  ext.disable_lr_margin     = <Esc>[?69l
  ext.enable_bpaste         = <Esc>[?2004h
  ext.disable_bpaste        = <Esc>[?2004l
  ext.enable_focus          = <Esc>[?1004h
  ext.disable_focus         = <Esc>[?1004l
  ext.enable_mouse          = <Esc>[?1002h<Esc>[?1006h
  ext.disable_mouse         = <Esc>[?1002l<Esc>[?1006l
  ext.set_underline_color   = <Esc>[58:2::%p1%d:%p2%d:%p3%dm
}}}

Executing InsertEnter Autocommands for "*"
autocommand lua require("packer.load")({'nvim-compe', 'better-escape.vim'}, { event = "InsertEnter *" }, _G.packer_plugins)

chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/LuaSnip/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/LuaSnip/plugin/luasnip.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/LuaSnip/plugin/luasnip.vim
continuing in InsertEnter Autocommands for "*"
not found in 'runtimepath': "lua/luasnip.lua"
not found in 'packpath': "pack/*/start/*/lua/luasnip.lua"
not found in 'packpath': "start/*/lua/luasnip.lua"
not found in 'packpath': "pack/*/start/*/package.json"
not found in 'packpath': "start/*/package.json"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/plugin/compe.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/plugin/compe.vim
continuing in InsertEnter Autocommands for "*"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/after/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/after/plugin/compe.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/after/plugin/compe.vim
continuing in InsertEnter Autocommands for "*"
not found in 'runtimepath': "lua/compe.lua"
not found in 'packpath': "pack/*/start/*/lua/compe.lua"
not found in 'packpath': "start/*/lua/compe.lua"
not found in 'runtimepath': "lua/compe_buffer.lua"
not found in 'packpath': "pack/*/start/*/lua/compe_buffer.lua"
not found in 'packpath': "start/*/lua/compe_buffer.lua"
not found in 'runtimepath': "lua/compe_luasnip.lua"
not found in 'packpath': "pack/*/start/*/lua/compe_luasnip.lua"
not found in 'packpath': "start/*/lua/compe_luasnip.lua"
not found in 'runtimepath': "lua/compe_nvim_lua.lua"
not found in 'packpath': "pack/*/start/*/lua/compe_nvim_lua.lua"
not found in 'packpath': "start/*/lua/compe_nvim_lua.lua"
not found in 'runtimepath': "lua/compe_nvim_lsp.lua"
not found in 'packpath': "pack/*/start/*/lua/compe_nvim_lsp.lua"
not found in 'packpath': "start/*/lua/compe_nvim_lsp.lua"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-autopairs/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-autopairs/plugin/nvim-autopairs.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-autopairs/plugin/nvim-autopairs.vim
continuing in InsertEnter Autocommands for "*"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/etc/xdg/nvim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/better-escape.vim/plugin)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 0: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/better-escape.vim/plugin/better_escape.vim"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/better-escape.vim/autoload)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 3: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/better-escape.vim/autoload/better_escape.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/better-escape.vim/autoload/better_escape.vim
continuing in function <SNR>62_get_initial_char
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/better-escape.vim/plugin/better_escape.vim
continuing in InsertEnter Autocommands for "*"
Executing InsertEnter Autocommands for "*"
Executing InsertEnter Autocommands for "*"
autocommand call s:matchparen.highlight(1, 1)

Executing InsertEnter Autocommands for "*"
autocommand call s:on_insert_enter()

Executing InsertEnter Autocommands for "*"
autocommand lua require"compe_nvim_lsp".register()

Executing InsertEnter Autocommands for "*"
autocommand call s:matchparen.highlight(1, 1)

Executing InsertEnter Autocommands for "*"
autocommand call s:on_insert_enter()

Executing InsertEnter Autocommands for "*"
autocommand lua require"compe_nvim_lsp".register()
-- INSERT --
Executing InsertCharPre Autocommands for "*"
autocommand lua require("packer.load")({'LuaSnip', 'friendly-snippets'}, { event = "InsertCharPre *" }, _G.packer_plugins)

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/autoload)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 1: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/autoload/compe.vim"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/autoload/vital)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 1: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/autoload/vital/compe.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/autoload/vital/compe.vim
continuing in /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/autoload/compe.vim
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/autoload/vital/_compe/VS/Vim)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 3: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/autoload/vital/_compe/VS/Vim/Window.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/autoload/vital/_compe/VS/Vim/Window.vim
continuing in function vital#compe#import[4]..<SNR>65_import[11]..<SNR>65__import[4]..<SNR>65__get_module
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/autoload/vital)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 1: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/autoload/vital/_compe.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/autoload/vital/_compe.vim
continuing in function vital#compe#import[4]..<SNR>65_import[11]..<SNR>65__import[4]..<SNR>65__get_module[3]..vital#_compe#VS#Vim#Window#import
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/nvim-compe/autoload/compe.vim
continuing in function <SNR>59_on_text_changed
Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand call s:on_complete_changed()

Executing TextChangedP Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedP Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedP Autocommands for "*"
autocommand call s:on_text_changed()
-- INSERT ---- INSERT ---- INSERT ---- INSERT ---- INSERT ---- INSERT --
Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()
-- INSERT --
Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand call s:on_complete_changed()

Executing TextChangedP Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedP Autocommands for "*"
autocommand call s:on_text_changed()
-- INSERT ---- INSERT ---- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand call s:on_complete_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CompleteChanged Autocommands for "*"
autocommand call s:on_complete_changed()

Executing TextChangedP Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedP Autocommands for "*"
autocommand call s:on_text_changed()
-- INSERT ---- INSERT ---- INSERT ---- INSERT --
Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()
-- INSERT ---- INSERT --
Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()
-- INSERT --
Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()

Executing InsertCharPre Autocommands for "*"
autocommand call better_escape#LogKeyPressTime()

Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing TextChangedI Autocommands for "*"
autocommand call s:on_text_changed()


Executing InsertLeave Autocommands for "*"
autocommand call s:matchparen.highlight(1)

Executing InsertLeave Autocommands for "*"
autocommand call s:on_insert_leave()

Executing InsertEnter Autocommands for "*"
autocommand call s:matchparen.highlight(1, 1)

Executing InsertEnter Autocommands for "*"
autocommand call s:on_insert_enter()

Executing InsertEnter Autocommands for "*"
autocommand lua require"compe_nvim_lsp".register()
-- INSERT --
Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()


Executing InsertLeave Autocommands for "*"
autocommand call s:matchparen.highlight(1)

Executing InsertLeave Autocommands for "*"
autocommand call s:on_insert_leave()

Executing CursorMoved Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()


Executing WinLeave Autocommands for "*"
autocommand lua require("galaxyline").inactive_galaxyline()

Executing WinLeave Autocommands for "*"
autocommand call s:matchparen.clear()

Executing WinEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing WinEnter Autocommands for "*"
autocommand call s:dopopd()

Executing WinEnter Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing WinEnter Autocommands for "*"
autocommand call s:matchparen.highlight(1)

Executing CursorMoved Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing BufLeave Autocommands for "*"
autocommand call s:matchparen.clear()

Executing BufEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing BufEnter Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing BufEnter Autocommands for "*"
autocommand :lua require("nvim-autopairs").on_attach()

Executing BufWinEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing BufWinEnter Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing BufWinEnter Autocommands for "*"
autocommand call matchup#loader#bufwinenter()

chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 4: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup/ts_engine.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup/ts_engine.vim
continuing in function matchup#loader#bufwinenter[4]..matchup#loader#init_buffer
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
line 17: sourcing "/home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup/re.vim"
finished sourcing /home/zach/.local/share/nvim/site/pack/packer/opt/vim-matchup/autoload/matchup/re.vim
continuing in function matchup#loader#bufwinenter[4]..matchup#loader#init_buffer[14]..<SNR>37_init_delim_regexes
Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

not found in 'runtimepath': "ftplugin/FTerm.vim ftplugin/FTerm_*.vim ftplugin/FTerm/*.vim"
not found in 'packpath': "pack/*/start/*/ftplugin/FTerm.vim ftplugin/FTerm_*.vim ftplugin/FTerm/*.vim"
not found in 'packpath': "start/*/ftplugin/FTerm.vim ftplugin/FTerm_*.vim ftplugin/FTerm/*.vim"
not found in 'runtimepath': "ftplugin/FTerm.lua ftplugin/FTerm_*.lua ftplugin/FTerm/*.lua"
not found in 'packpath': "pack/*/start/*/ftplugin/FTerm.lua ftplugin/FTerm_*.lua ftplugin/FTerm/*.lua"
not found in 'packpath': "start/*/ftplugin/FTerm.lua ftplugin/FTerm_*.lua ftplugin/FTerm/*.lua"
Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

not found in 'runtimepath': "indent/FTerm.vim"
not found in 'packpath': "pack/*/start/*/indent/FTerm.vim"
not found in 'packpath': "start/*/indent/FTerm.vim"
not found in 'runtimepath': "indent/FTerm.lua"
not found in 'packpath': "pack/*/start/*/indent/FTerm.lua"
not found in 'packpath': "start/*/indent/FTerm.lua"
Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

not found in 'runtimepath': "syntax/FTerm.vim syntax/FTerm/*.vim"
not found in 'packpath': "pack/*/start/*/syntax/FTerm.vim syntax/FTerm/*.vim"
not found in 'packpath': "start/*/syntax/FTerm.vim syntax/FTerm/*.vim"
not found in 'runtimepath': "syntax/FTerm.lua syntax/FTerm/*.lua"
not found in 'packpath': "pack/*/start/*/syntax/FTerm.lua syntax/FTerm/*.lua"
not found in 'packpath': "start/*/syntax/FTerm.lua syntax/FTerm/*.lua"
Executing FileType Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing FileType Autocommands for "*"
autocommand call matchup#loader#init_buffer()

Executing FileType Autocommands for "*"
autocommand lua COLORIZER_SETUP_HOOK()

Executing FileType Autocommands for "*"
autocommand lua require'nvim-treesitter.configs'.reattach_module('highlight')

Executing FileType Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing FileType Autocommands for "*"
autocommand :lua require("nvim-autopairs").force_attach()

Executing TermOpen Autocommands for "term://*"
autocommand setlocal nonumber  laststatus=0

Executing TermOpen Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()
-- TERMINAL ---- TERMINAL ---- TERMINAL --
Executing CursorMoved Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChanged Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChanged Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh


Executing BufLeave Autocommands for "*"
autocommand call s:matchparen.clear()

Executing WinLeave Autocommands for "*"
autocommand lua require("galaxyline").inactive_galaxyline()

Executing WinLeave Autocommands for "*"
autocommand call s:matchparen.clear()

Executing WinEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing WinEnter Autocommands for "*"
autocommand call s:dopopd()

Executing WinEnter Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing WinEnter Autocommands for "*"
autocommand call s:matchparen.highlight(1)

Executing CursorMoved Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing BufEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing BufEnter Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing BufEnter Autocommands for "*"
autocommand :lua require("nvim-autopairs").on_attach()


Executing WinLeave Autocommands for "*"
autocommand lua require("galaxyline").inactive_galaxyline()

Executing WinLeave Autocommands for "*"
autocommand call s:matchparen.clear()

Executing WinEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing WinEnter Autocommands for "*"
autocommand call s:dopopd()

Executing WinEnter Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing WinEnter Autocommands for "*"
autocommand call s:matchparen.highlight(1)

Executing CursorMoved Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing BufLeave Autocommands for "*"
autocommand call s:matchparen.clear()

Executing BufEnter Autocommands for "term://*"
autocommand setlocal nonumber

Executing BufEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing BufEnter Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing BufEnter Autocommands for "*"
autocommand :lua require("nvim-autopairs").on_attach()

Executing BufWinEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing BufWinEnter Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing BufWinEnter Autocommands for "*"
autocommand call matchup#loader#bufwinenter()

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

not found in 'runtimepath': "ftplugin/FTerm.vim ftplugin/FTerm_*.vim ftplugin/FTerm/*.vim"
not found in 'packpath': "pack/*/start/*/ftplugin/FTerm.vim ftplugin/FTerm_*.vim ftplugin/FTerm/*.vim"
not found in 'packpath': "start/*/ftplugin/FTerm.vim ftplugin/FTerm_*.vim ftplugin/FTerm/*.vim"
not found in 'runtimepath': "ftplugin/FTerm.lua ftplugin/FTerm_*.lua ftplugin/FTerm/*.lua"
not found in 'packpath': "pack/*/start/*/ftplugin/FTerm.lua ftplugin/FTerm_*.lua ftplugin/FTerm/*.lua"
not found in 'packpath': "start/*/ftplugin/FTerm.lua ftplugin/FTerm_*.lua ftplugin/FTerm/*.lua"
Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

not found in 'runtimepath': "indent/FTerm.vim"
not found in 'packpath': "pack/*/start/*/indent/FTerm.vim"
not found in 'packpath': "start/*/indent/FTerm.vim"
not found in 'runtimepath': "indent/FTerm.lua"
not found in 'packpath': "pack/*/start/*/indent/FTerm.lua"
not found in 'packpath': "start/*/indent/FTerm.lua"
Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

not found in 'runtimepath': "syntax/FTerm.vim syntax/FTerm/*.vim"
not found in 'packpath': "pack/*/start/*/syntax/FTerm.vim syntax/FTerm/*.vim"
not found in 'packpath': "start/*/syntax/FTerm.vim syntax/FTerm/*.vim"
not found in 'runtimepath': "syntax/FTerm.lua syntax/FTerm/*.lua"
not found in 'packpath': "pack/*/start/*/syntax/FTerm.lua syntax/FTerm/*.lua"
not found in 'packpath': "start/*/syntax/FTerm.lua syntax/FTerm/*.lua"
Executing FileType Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing FileType Autocommands for "*"
autocommand call matchup#loader#init_buffer()

Executing FileType Autocommands for "*"
autocommand lua COLORIZER_SETUP_HOOK()

Executing FileType Autocommands for "*"
autocommand lua require'nvim-treesitter.configs'.reattach_module('highlight')

Executing FileType Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing FileType Autocommands for "*"
autocommand :lua require("nvim-autopairs").force_attach()
-- TERMINAL ---- TERMINAL ---- TERMINAL --
Executing CursorMoved Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChanged Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChanged Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()


Executing WinLeave Autocommands for "*"
autocommand lua require("galaxyline").inactive_galaxyline()

Executing WinLeave Autocommands for "*"
autocommand call s:matchparen.clear()

Executing WinEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing WinEnter Autocommands for "*"
autocommand call s:dopopd()

Executing WinEnter Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing WinEnter Autocommands for "*"
autocommand call s:matchparen.highlight(1)

Executing CursorMoved Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing BufLeave Autocommands for "*"
autocommand call s:matchparen.clear()

Executing BufEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing BufEnter Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing BufEnter Autocommands for "*"
autocommand :lua require("nvim-autopairs").on_attach()

Executing BufWinEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing BufWinEnter Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing BufWinEnter Autocommands for "*"
autocommand call matchup#loader#bufwinenter()

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TermOpen Autocommands for "term://*"
autocommand setlocal nonumber  laststatus=0

Executing TermOpen Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

not found in 'runtimepath': "ftplugin/termwrapper.vim ftplugin/termwrapper_*.vim ftplugin/termwrapper/*.vim"
not found in 'packpath': "pack/*/start/*/ftplugin/termwrapper.vim ftplugin/termwrapper_*.vim ftplugin/termwrapper/*.vim"
not found in 'packpath': "start/*/ftplugin/termwrapper.vim ftplugin/termwrapper_*.vim ftplugin/termwrapper/*.vim"
not found in 'runtimepath': "ftplugin/termwrapper.lua ftplugin/termwrapper_*.lua ftplugin/termwrapper/*.lua"
not found in 'packpath': "pack/*/start/*/ftplugin/termwrapper.lua ftplugin/termwrapper_*.lua ftplugin/termwrapper/*.lua"
not found in 'packpath': "start/*/ftplugin/termwrapper.lua ftplugin/termwrapper_*.lua ftplugin/termwrapper/*.lua"
Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

not found in 'runtimepath': "indent/termwrapper.vim"
not found in 'packpath': "pack/*/start/*/indent/termwrapper.vim"
not found in 'packpath': "start/*/indent/termwrapper.vim"
not found in 'runtimepath': "indent/termwrapper.lua"
not found in 'packpath': "pack/*/start/*/indent/termwrapper.lua"
not found in 'packpath': "start/*/indent/termwrapper.lua"
Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

not found in 'runtimepath': "syntax/termwrapper.vim syntax/termwrapper/*.vim"
not found in 'packpath': "pack/*/start/*/syntax/termwrapper.vim syntax/termwrapper/*.vim"
not found in 'packpath': "start/*/syntax/termwrapper.vim syntax/termwrapper/*.vim"
not found in 'runtimepath': "syntax/termwrapper.lua syntax/termwrapper/*.lua"
not found in 'packpath': "pack/*/start/*/syntax/termwrapper.lua syntax/termwrapper/*.lua"
not found in 'packpath': "start/*/syntax/termwrapper.lua syntax/termwrapper/*.lua"
Executing FileType Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing FileType Autocommands for "*"
autocommand call matchup#loader#init_buffer()

Executing FileType Autocommands for "*"
autocommand lua COLORIZER_SETUP_HOOK()

Executing FileType Autocommands for "*"
autocommand lua require'nvim-treesitter.configs'.reattach_module('highlight')

Executing FileType Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing FileType Autocommands for "*"
autocommand :lua require("nvim-autopairs").force_attach()
-- TERMINAL ---- TERMINAL ---- TERMINAL --
Executing CursorMoved Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChanged Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChanged Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()


Executing BufLeave Autocommands for "*"
autocommand call s:matchparen.clear()

Executing WinLeave Autocommands for "*"
autocommand lua require("galaxyline").inactive_galaxyline()

Executing WinLeave Autocommands for "*"
autocommand call s:matchparen.clear()

Executing WinEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing WinEnter Autocommands for "*"
autocommand call s:dopopd()

Executing WinEnter Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing WinEnter Autocommands for "*"
autocommand call s:matchparen.highlight(1)

Executing CursorMoved Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing BufEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing BufEnter Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing BufEnter Autocommands for "*"
autocommand :lua require("nvim-autopairs").on_attach()



Executing WinLeave Autocommands for "*"
autocommand lua require("galaxyline").inactive_galaxyline()

Executing WinLeave Autocommands for "*"
autocommand call s:matchparen.clear()

Executing WinEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing WinEnter Autocommands for "*"
autocommand call s:dopopd()

Executing WinEnter Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing WinEnter Autocommands for "*"
autocommand call s:matchparen.highlight(1)

Executing CursorMoved Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing BufLeave Autocommands for "*"
autocommand call s:matchparen.clear()

Executing BufEnter Autocommands for "term://*"
autocommand setlocal nonumber

Executing BufEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing BufEnter Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing BufEnter Autocommands for "*"
autocommand :lua require("nvim-autopairs").on_attach()

Executing BufWinEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing BufWinEnter Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing BufWinEnter Autocommands for "*"
autocommand call matchup#loader#bufwinenter()

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

not found in 'runtimepath': "ftplugin/FTerm.vim ftplugin/FTerm_*.vim ftplugin/FTerm/*.vim"
not found in 'packpath': "pack/*/start/*/ftplugin/FTerm.vim ftplugin/FTerm_*.vim ftplugin/FTerm/*.vim"
not found in 'packpath': "start/*/ftplugin/FTerm.vim ftplugin/FTerm_*.vim ftplugin/FTerm/*.vim"
not found in 'runtimepath': "ftplugin/FTerm.lua ftplugin/FTerm_*.lua ftplugin/FTerm/*.lua"
not found in 'packpath': "pack/*/start/*/ftplugin/FTerm.lua ftplugin/FTerm_*.lua ftplugin/FTerm/*.lua"
not found in 'packpath': "start/*/ftplugin/FTerm.lua ftplugin/FTerm_*.lua ftplugin/FTerm/*.lua"
Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

not found in 'runtimepath': "indent/FTerm.vim"
not found in 'packpath': "pack/*/start/*/indent/FTerm.vim"
not found in 'packpath': "start/*/indent/FTerm.vim"
not found in 'runtimepath': "indent/FTerm.lua"
not found in 'packpath': "pack/*/start/*/indent/FTerm.lua"
not found in 'packpath': "start/*/indent/FTerm.lua"
Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

not found in 'runtimepath': "syntax/FTerm.vim syntax/FTerm/*.vim"
not found in 'packpath': "pack/*/start/*/syntax/FTerm.vim syntax/FTerm/*.vim"
not found in 'packpath': "start/*/syntax/FTerm.vim syntax/FTerm/*.vim"
not found in 'runtimepath': "syntax/FTerm.lua syntax/FTerm/*.lua"
not found in 'packpath': "pack/*/start/*/syntax/FTerm.lua syntax/FTerm/*.lua"
not found in 'packpath': "start/*/syntax/FTerm.lua syntax/FTerm/*.lua"
Executing FileType Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing FileType Autocommands for "*"
autocommand call matchup#loader#init_buffer()

Executing FileType Autocommands for "*"
autocommand lua COLORIZER_SETUP_HOOK()

Executing FileType Autocommands for "*"
autocommand lua require'nvim-treesitter.configs'.reattach_module('highlight')

Executing FileType Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing FileType Autocommands for "*"
autocommand :lua require("nvim-autopairs").force_attach()
-- TERMINAL ---- TERMINAL ---- TERMINAL --
Executing CursorMoved Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChanged Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChanged Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh


Executing BufLeave Autocommands for "*"
autocommand call s:matchparen.clear()

Executing WinLeave Autocommands for "*"
autocommand lua require("galaxyline").inactive_galaxyline()

Executing WinLeave Autocommands for "*"
autocommand call s:matchparen.clear()

Executing WinEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing WinEnter Autocommands for "*"
autocommand call s:dopopd()

Executing WinEnter Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing WinEnter Autocommands for "*"
autocommand call s:matchparen.highlight(1)

Executing CursorMoved Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing BufEnter Autocommands for "*"
autocommand if bufname('%') == "NvimTree" | set laststatus=0 | else | set laststatus=2 | endif

Executing BufEnter Autocommands for "*"
autocommand lua require("galaxyline").load_galaxyline()

Executing BufEnter Autocommands for "*"
autocommand :lua require("nvim-autopairs").on_attach()

Executing CursorMoved Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()

Executing InsertEnter Autocommands for "*"
autocommand call s:matchparen.highlight(1, 1)

Executing InsertEnter Autocommands for "*"
autocommand call s:on_insert_enter()

Executing InsertEnter Autocommands for "*"
autocommand lua require"compe_nvim_lsp".register()
-- INSERT --
Executing CursorMovedI Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()


Executing InsertLeave Autocommands for "*"
autocommand call s:matchparen.highlight(1)

Executing InsertLeave Autocommands for "*"
autocommand call s:on_insert_leave()

Executing CursorMoved Autocommands for "*"
autocommand call s:matchparen.highlight_deferred()


Executing VimLeavePre Autocommands for "*"
autocommand lua vim.lsp._vim_exit_handler()

Executing VimLeavePre Autocommands for "*"
autocommand lua require("gitsigns").detach_all()

Writing ShaDa file "/home/zach/.local/share/nvim/shada/main.shada"
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvimconfigs/nviminprogress/lua/plugins)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvimconfigs/nviminprogress/lua)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/.config/nvimconfigs/nviminprogress/lua)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
chdir(/home/zach/development/research/SealFaceRecognition/nets/newnet)
Executing TermClose Autocommands for "<buffer=2>"
autocommand lua require('FTerm.terminal').au_close['2F62696E2F7A7368']()

Executing TermClose Autocommands for "term://~/development/research/SealFaceRecognition/nets/newnet//35384:/bin/zsh;termwrapper1"
autocommand lua require("termwrapper").TermWrapper.get(1):on_close()
